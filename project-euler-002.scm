;
; https://projecteuler.net/problem=2
;
; Problem 2 - Even Fibonacci numbers
;
;     Each new term in the Fibonacci sequence is generated by adding the
;     previous two terms. By starting with 1 and 2, the first 10 terms will be:
;
;         1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;
;     By considering the terms in the Fibonacci sequence whose values do not
;     exceed four million, find the sum of the even-valued terms.
;

(define main (lambda (arguments)
    (print (sum-of-even-valued-fibonacci-numbers 4000000))))

(define sum-of-even-valued-fibonacci-numbers (lambda (x)
    (define sum-of-even-valued-fibonacci-numbers (lambda (x1 x2 maximum sum)
        (cond
            ((> x2 maximum)
                sum)
            ((even? x2)
                (sum-of-even-valued-fibonacci-numbers
                    x2
                    (+ x1 x2)
                    maximum
                    (+ sum x2)))
            (else
                (sum-of-even-valued-fibonacci-numbers
                    x2
                    (+ x1 x2)
                    maximum
                    sum)))))
    (sum-of-even-valued-fibonacci-numbers 0 1 (- x 1) 0)))

